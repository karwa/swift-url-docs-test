name: Generate Documentation

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 4. Checkout WebURL code (we need a full clone in order to get tags).
      #    This must be the root folder for 'github-pages-deploy-action' to work.
      - name: Checkout WebURL Code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      # 1. Download and Install Swift 5.5.1
      - name: Download Swift 5.5.1
        run: wget -q https://download.swift.org/swift-5.5.1-release/ubuntu2004/swift-5.5.1-RELEASE/swift-5.5.1-RELEASE-ubuntu20.04.tar.gz
      - name: Extract Swift 5.5.1
        run: tar xzf swift-5.5.1-RELEASE-ubuntu20.04.tar.gz
      - name: Add Swift toolchain to PATH
        run: |
          echo "$GITHUB_WORKSPACE/swift-5.5.1-RELEASE-ubuntu20.04/usr/bin" >> $GITHUB_PATH
      # 2. Checkout and build Swift-DocC (TODO: Remove once docc becomes part of the toolchain)
      - name: Checkout swift-docc
        uses: actions/checkout@v2
        with:
          repository: karwa/swift-docc
          ref: main
          path: swift-docc
      - name: Cache DocC
        id: cache-docc
        uses: actions/cache@v2
        with:
          key: swift-url-docc-build
          path: swift-docc/.build
      - name: Build swift-docc
        if: ${{ !steps.cache-docc.outputs.cache-hit }}
        run: |
          cd swift-docc; swift build --product docc -c release; cd ..
      # 3. Checkout and build custom Swift-DocC-Render
      - name: Checkout swift-docc-render
        uses: actions/checkout@v2
        with:
          repository: karwa/swift-docc-render
          ref: main
          path: swift-docc-render
      - name: Build swift-docc-render
        run: |
          cd swift-docc-render; npm install && npm run build; cd ..
      # 5. Checkout WebURL docs (we need to add to it, not replace it)
      - name: Checkout WebURL Docs
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: docs-out
      # 6. Generate docs for main branch.
      - name: Clear existing docs
        run: rm -rf docs-out/.git && rm -rf docs-out/main && mkdir -p docs-out/main
      - name: Generate SymbolGraph (main)
        run: |
          mkdir -p .build/symbol-graphs && swift build --target WebURL -Xswiftc -emit-symbol-graph -Xswiftc -emit-symbol-graph-dir -Xswiftc .build/symbol-graphs
      - name: Run Docc (main)
        run: |
          export DOCC_HTML_DIR="$(pwd)/swift-docc-render/dist" && swift-docc/.build/release/docc convert Sources/WebURL/WebURL.docc --fallback-display-name WebURL --fallback-bundle-identifier com.karwa.WebURL --fallback-bundle-version 0.0.0 --additional-symbol-graph-dir .build/symbol-graphs --transform-for-static-hosting --static-hosting-base-path /swift-url-docs-test/main --output-path docs-out/main
      # 7. Generate docs for the latest tag.
      - name: Check zero
        run: |
          echo "$(git tag -l)"
      - name: Check zero-point-five
        run: |
          echo "$(git tag -l | tail -1)"
      - name: Get latest tag
        run: |
          echo "latest-tag=$( git tag -l | tail -1 )" >> $GITHUB_ENV
      - name: Check if docs exist for latest tag
        run: |
          echo "latest-tag-has-docs=$([ -d /docs-out/${{ env.latest-tag }} ] && echo "true")" >> $GITHUB_ENV
      - name: Checkout latest tag
        if: ${{ !env.latest-tag-has-docs }}
        run: |
          git checkout ${{ env.latest-tag }}
      - name: Generate SymbolGraph (latest tag)
        if: ${{ !env.latest-tag-has-docs }}
        run: |
          mkdir -p .build/symbol-graphs-${{ env.latest-tag }} && swift build --target WebURL -Xswiftc -emit-symbol-graph -Xswiftc -emit-symbol-graph-dir -Xswiftc .build/symbol-graphs-${{ env.latest-tag }}
      - name: Run Docc (latest tag)
        if: ${{ !env.latest-tag-has-docs }}
        run: |
          export DOCC_HTML_DIR="$(pwd)/swift-docc-render/dist" && swift-docc/.build/release/docc convert Sources/WebURL/WebURL.docc --fallback-display-name WebURL --fallback-bundle-identifier com.karwa.WebURL --fallback-bundle-version ${{ env.latest-tag }} --additional-symbol-graph-dir .build/symbol-graphs-${{ env.latest-tag }} --transform-for-static-hosting --static-hosting-base-path /swift-url-docs-test/${{ env.latest-tag }} --output-path docs-out/${{ env.latest-tag }}
      # 7. Publish the result.
      - name: Check one
        run: ls -al docs-out
      - name: Check two
        run: ls -al docs-out/main/
      - name: Check latest
        run: ls -al docs-out/${{ env.latest-tag }}
      - name: Fix permissions
        run: 'sudo chown --recursive $USER docs-out'
      - name: Publish documentation to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: docs-out
          single-commit: true
          clean: false
      - name: Check three
        run: ls -al docs-out
      - name: Check four
        run: ls -al docs-out/main/