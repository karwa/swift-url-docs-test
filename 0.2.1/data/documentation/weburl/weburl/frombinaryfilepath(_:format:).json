{"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"WebURL"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6WebURLAAV","text":"WebURL","kind":"typeIdentifier"}],"title":"fromBinaryFilePath(_:format:)","roleHeading":"Type Method","role":"symbol","symbolKind":"method","externalID":"s:6WebURLAAV18fromBinaryFilePath_6formatABx_AA0eF6FormatVtKSKRzs5UInt8V7ElementRtzlFZ","extendedModule":"WebURL"},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"sections":[],"abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"],"title":"Converting To and From Binary File Paths","generated":true}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","text":"FilePathFormat"},{"kind":"text","text":" = .native) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","text":"WebURL"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SK","text":"BidirectionalCollection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"path","content":[{"inlineContent":[{"text":"The binary file path, as a collection of 8-bit code-units.","type":"text"}],"type":"paragraph"}]},{"name":"format","content":[{"type":"paragraph","inlineContent":[{"text":"The way in which ","type":"text"},{"type":"codeVoice","code":"path"},{"text":" should be interpreted.","type":"text"},{"text":" ","type":"text"},{"text":"The default is ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"reference","isActive":true},{"text":", which resolves to the correct format for the","type":"text"},{"text":" ","type":"text"},{"text":"compile target.","type":"text"}]}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"In order to create a file URL, the file path must satisfy two conditions:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It must be a syntactically valid, non-relative binary path according to the "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","type":"reference","isActive":true},{"type":"text","text":", and"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It must not contain any components which traverse to their parent directories (”"},{"type":"codeVoice","code":".."},{"type":"text","text":"” components)."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, it must not contain "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" bytes, so the terminator of a null-terminated string should"},{"type":"text","text":" "},{"type":"text","text":"not be included in the binary file path. Otherwise, a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError"},{"type":"text","text":" error will be thrown"},{"type":"text","text":" "},{"type":"text","text":"which can be used to provide diagnostics."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true,"type":"reference"},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"type":"codeVoice","code":"\/usr\/\/bin"},{"type":"text","text":" -> "},{"type":"codeVoice","code":"\/usr\/bin"},{"type":"text","text":"), and percent-encoding is added where required."}]},{"text":"Encoding","level":3,"anchor":"Encoding","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The given ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true,"type":"reference"},{"text":" determines how the binary file path is interpreted. Each format contains","type":"text"},{"text":" ","type":"text"},{"text":"documentation and references explaining which bytes are reserved or not, and how to obtain a binary path","type":"text"},{"text":" ","type":"text"},{"text":"from the Operating System.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The TL;DR is:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"On POSIX systems (Apple OSes, Linux, Android), file and directory names are considered binary data rather","type":"text"},{"text":" ","type":"text"},{"text":"than textual. The most direct way to obtain a binary path is to use a C string (minus the null terminator).","type":"text"},{"text":" ","type":"text"},{"text":"See ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","isActive":true},{"text":" for more.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"On Windows, the platform APIs work with paths as UTF-16. Use these and transcode to UTF-8 to obtain an","type":"text"},{"text":" ","type":"text"},{"text":"8-bit binary path. They might contain invalid Unicode, but there’s no good answer as to what to do about that.","type":"text"},{"text":" ","type":"text"},{"text":"Throwing a ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure","isActive":true,"type":"reference"},{"text":" error is reasonable. See ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows","isActive":true,"type":"reference"},{"text":" .","type":"text"}]}]}]},{"syntax":"swift","code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should use the '-W' family of platform functions and convert to UTF-8.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","","\/\/ Start with a C path.","let cwd: UnsafeMutablePointer<CChar> = getcwd(nil, 0)!","defer { free(cwd) }","","\/\/ Use 'realpath' to normalize.","let normalCwd: UnsafeMutablePointer<CChar> = realpath(cwd, nil)!","defer { free(normalCwd) }","","\/\/ Handle signed CChar by rebinding.","let normalCwdLen = strlen(normalCwd)","let url: WebURL = try normalCwd.withMemoryRebound(to: UInt8.self, capacity: normalCwdLen) {","  \/\/ Do not include the null terminator.","  let buffer = UnsafeBufferPointer(start: UnsafePointer($0), count: normalCwdLen)","  return try WebURL.fromBinaryFilePath(buffer)","  \/\/ ✅ \"file:\/\/\/private\/tmp\"","}"],"type":"codeListing"},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"To work with binary file paths, we recommend developers use a dedicated file path type,"},{"type":"text","text":" "},{"type":"text","text":"such as swift-system’s "},{"type":"codeVoice","code":"FilePath"},{"type":"text","text":". The "},{"type":"codeVoice","code":"WebURL(filePath: FilePath)"},{"type":"text","text":" initializer from "},{"type":"codeVoice","code":"WebURLSystemExtras"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"the best way to construct a file URL from a binary file path. It handles the transcoding on Windows mentioned"},{"type":"text","text":" "},{"type":"text","text":"above, and provides simple APIs to check that a binary path is absolute and contains no “"},{"type":"codeVoice","code":".."},{"type":"text","text":"” components."}]},{"type":"codeListing","code":["import WebURL","import System","import WebURLSystemExtras","","let cString = getcwd(nil, 0)","defer { free(cString) }","","var path = FilePath(cString: cString)","path.lexicallyNormalize()","let url = try WebURL(filePath: path)","\/\/ ✅ \"file:\/\/\/private\/tmp\""],"syntax":"swift"}]},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","isActive":true}]}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":1},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"WebURL","preciseIdentifier":"s:6WebURLAAV"}],"abstract":[{"text":"Creates a URL representation of a binary file path.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","title":"fromBinaryFilePath(_:format:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}],"url":"\/documentation\/weburl\/weburl","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError":{"role":"symbol","type":"topic","url":"\/documentation\/weburl\/urlfromfilepatherror","navigatorTitle":[{"kind":"identifier","text":"URLFromFilePathError"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLFromFilePathError"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","abstract":[{"text":"The reason why a file URL could not be created from a file path.","type":"text"}],"title":"URLFromFilePathError"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","type":"topic","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"title":"native","kind":"symbol","abstract":[{"text":"The native path style used by the compile target.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"native","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"topic","role":"symbol","url":"\/documentation\/weburl\/filepathformat\/native"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"abstract":[{"text":"A description of a file path’s structure.","type":"text"}],"title":"FilePathFormat","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","url":"\/documentation\/weburl\/filepathformat","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"FilePathFormat","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilePathFormat","kind":"identifier"}],"type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/posix":{"title":"posix","kind":"symbol","abstract":[{"text":"A path which is compatible with the POSIX standard.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"posix","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","type":"topic","role":"symbol","url":"\/documentation\/weburl\/filepathformat\/posix"},"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError/transcodingFailure":{"abstract":[{"text":"The file path could not be transcoded.","type":"text"}],"kind":"symbol","title":"transcodingFailure","role":"symbol","type":"topic","url":"\/documentation\/weburl\/urlfromfilepatherror\/transcodingfailure","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"transcodingFailure"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL20URLFromFilePathErrorV","kind":"typeIdentifier","text":"URLFromFilePathError"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"title":"binaryFilePath(from:format:nullTerminated:)","kind":"symbol","abstract":[{"text":"Reconstructs a binary file path from a URL.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"nullTerminated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/windows":{"abstract":[{"text":"A path which is compatible with those used by Microsoft Windows.","type":"text"}],"title":"windows","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows","url":"\/documentation\/weburl\/filepathformat\/windows","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"windows","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat","kind":"typeIdentifier"}],"type":"topic"}}}