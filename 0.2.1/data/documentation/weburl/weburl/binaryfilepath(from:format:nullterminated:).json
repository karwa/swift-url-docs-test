{"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"abstract":[{"text":"Reconstructs a binary file path from a URL.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"url","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","text":"WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","text":"FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"text":" = .native, ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The file URL."}],"type":"paragraph"}],"name":"url"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The kind of path to construct.","type":"text"},{"text":" ","type":"text"},{"text":"The default is ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"reference","isActive":true},{"text":", which resolves to the correct format for the","type":"text"},{"text":" ","type":"text"},{"text":"compile target.","type":"text"}]}],"name":"format"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the returned binary file path should include a null-terminator."}]}],"name":"nullTerminated"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to create a file path, the URL must satisfy two conditions:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"It must be a file URL, containing a semantically valid, non-relative path according to the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"It must not contain any percent-encoded directory separators or NULL bytes."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Otherwise, a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","type":"reference"},{"text":" error will be thrown which can be used to provide diagnostics.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"type":"codeVoice","code":"\/usr\/\/bin"},{"type":"text","text":" -> "},{"type":"codeVoice","code":"\/usr\/bin"},{"type":"text","text":"), and percent-encoding is removed."}]},{"type":"heading","anchor":"Encoding","level":3,"text":"Encoding"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Binary paths consist of bytes decoded from the URL. Depending on the platform’s file path encoding,"},{"type":"text","text":" "},{"type":"text","text":"some interpretation may be necessary."}]},{"items":[{"content":[{"inlineContent":[{"text":"On POSIX (Apple, Linux, etc) systems, the returned path may be used directly (without transcoding).","type":"text"},{"text":" ","type":"text"},{"text":"Request a null-terminated binary file path, then use the array’s pointer as a C string when interacting","type":"text"},{"text":" ","type":"text"},{"text":"with the operating system.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On Windows, we need to turn the bytes in to a set of Unicode code-points, in UTF-16 encoding."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To do that, we need to guess how these bytes we received from some URL might be encoded."},{"type":"text","text":" "},{"type":"text","text":"A good strategy is to first try transcoding from UTF-8 since it is self-validating and widely used,"},{"type":"text","text":" "},{"type":"text","text":"and if that fails, fall back to trying ANSI code-pages, including the system-specific “active” code-page."},{"type":"text","text":" "},{"type":"text","text":"The platform’s "},{"code":"MultiByteToWideChar","type":"codeVoice"},{"type":"text","text":" function is able to map these encodings to Unicode."}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should convert to UTF-16 and use the '-W' family of platform functions.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","let openFn: (UnsafePointer<CChar>, Int32, mode_t) -> Int32 = Darwin.open","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the binary file path.","let binaryPath = try WebURL.binaryFilePath(from: url, nullTerminated: true)","","\/\/ Handle signed CChar by rebinding.","binaryPath.withUnsafeBufferPointer {","  $0.withMemoryRebound(to: CChar.self) { cString in","    \/\/ Use the C string to interact with the OS.","    let descriptor = openFn(cString.baseAddress!, O_WRONLY | O_CREAT, S_IRUSR | S_IWUSR | S_IROTH)","    \/\/ ... write to file","    close(descriptor)","  }","}"]},{"type":"aside","style":"tip","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"To work with binary file paths, we recommend developers use a dedicated file path type,"},{"type":"text","text":" "},{"type":"text","text":"such as swift-system’s "},{"code":"FilePath","type":"codeVoice"},{"type":"text","text":". The "},{"code":"FilePath(url: WebURL)","type":"codeVoice"},{"type":"text","text":" initializer from "},{"code":"WebURLSystemExtras","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"the best way to construct a file path from a URL. It automatically handles platform-specific details"},{"type":"text","text":" "},{"type":"text","text":"such as transcoding on Windows."}],"type":"paragraph"},{"type":"codeListing","code":["import WebURL","import System","import WebURLSystemExtras","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the file path.","let path = try FilePath(url: url)","","\/\/ Open the file and write some data.","let descriptor = try FileDescriptor.open(path, .readWrite, options: .create, permissions: [.ownerReadWrite, .otherRead])","try descriptor.writeAll(\"hello, world!\".utf8)","try descriptor.close()"],"syntax":"swift"}]},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","type":"reference"}]}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":1},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"]}],"seeAlsoSections":[{"title":"Converting To and From Binary File Paths","generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"]}],"sections":[],"metadata":{"role":"symbol","modules":[{"name":"WebURL"}],"title":"binaryFilePath(from:format:nullTerminated:)","externalID":"s:6WebURLAAV14binaryFilePath4from6format14nullTerminatedSays5UInt8VGAB_AA0dE6FormatVSbtKFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"roleHeading":"Type Method","symbolKind":"method","extendedModule":"WebURL"},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"WebURL","preciseIdentifier":"s:6WebURLAAV"}],"abstract":[{"text":"Creates a URL representation of a binary file path.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","title":"fromBinaryFilePath(_:format:)"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"url":"\/documentation\/weburl","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","type":"topic","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"abstract":[{"text":"A description of a file path’s structure.","type":"text"}],"title":"FilePathFormat","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","url":"\/documentation\/weburl\/filepathformat","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"FilePathFormat","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilePathFormat","kind":"identifier"}],"type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFromURLError":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","title":"FilePathFromURLError","kind":"symbol","abstract":[{"text":"The reason why a file path could not be created from a URL.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilePathFromURLError","kind":"identifier"}],"navigatorTitle":[{"text":"FilePathFromURLError","kind":"identifier"}],"role":"symbol","url":"\/documentation\/weburl\/filepathfromurlerror"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"title":"binaryFilePath(from:format:nullTerminated:)","kind":"symbol","abstract":[{"text":"Reconstructs a binary file path from a URL.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"nullTerminated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}],"url":"\/documentation\/weburl\/weburl","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"title":"native","kind":"symbol","abstract":[{"text":"The native path style used by the compile target.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"native","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"topic","role":"symbol","url":"\/documentation\/weburl\/filepathformat\/native"}}}