{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"externalID":"s:6WebURLAAV14binaryFilePath4from6format14nullTerminatedSays5UInt8VGAB_AA0dE6FormatVSbtKFZ","modules":[{"name":"WebURL"}],"symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WebURL","preciseIdentifier":"s:6WebURLAAV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nullTerminated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"roleHeading":"Type Method","extendedModule":"WebURL","role":"symbol","title":"binaryFilePath(from:format:nullTerminated:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"url","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"WebURL","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","preciseIdentifier":"s:6WebURLAAV"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"text":" = .native, ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"url","content":[{"inlineContent":[{"text":"The file URL.","type":"text"}],"type":"paragraph"}]},{"name":"format","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The kind of path to construct."},{"type":"text","text":" "},{"type":"text","text":"The default is "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","isActive":true},{"type":"text","text":", which resolves to the correct format for the"},{"type":"text","text":" "},{"type":"text","text":"compile target."}]}]},{"name":"nullTerminated","content":[{"inlineContent":[{"type":"text","text":"Whether the returned binary file path should include a null-terminator."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"In order to create a file path, the URL must satisfy two conditions:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It must be a file URL, containing a semantically valid, non-relative path according to the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It must not contain any percent-encoded directory separators or NULL bytes."}]}]}]},{"inlineContent":[{"text":"Otherwise, a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","type":"reference"},{"text":" error will be thrown which can be used to provide diagnostics.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Some minimal normalization is applied to the path according to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","type":"reference"},{"text":" (for example,","type":"text"},{"text":" ","type":"text"},{"text":"collapsing duplicate slashes, such as ","type":"text"},{"code":"\/usr\/\/bin","type":"codeVoice"},{"text":" -> ","type":"text"},{"code":"\/usr\/bin","type":"codeVoice"},{"text":"), and percent-encoding is removed.","type":"text"}],"type":"paragraph"},{"anchor":"Encoding","level":3,"text":"Encoding","type":"heading"},{"inlineContent":[{"type":"text","text":"Binary paths consist of bytes decoded from the URL. Depending on the platform’s file path encoding,"},{"type":"text","text":" "},{"type":"text","text":"some interpretation may be necessary."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On POSIX (Apple, Linux, etc) systems, the returned path may be used directly (without transcoding)."},{"type":"text","text":" "},{"type":"text","text":"Request a null-terminated binary file path, then use the array’s pointer as a C string when interacting"},{"type":"text","text":" "},{"type":"text","text":"with the operating system."}]}]},{"content":[{"inlineContent":[{"text":"On Windows, we need to turn the bytes in to a set of Unicode code-points, in UTF-16 encoding.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"To do that, we need to guess how these bytes we received from some URL might be encoded.","type":"text"},{"text":" ","type":"text"},{"text":"A good strategy is to first try transcoding from UTF-8 since it is self-validating and widely used,","type":"text"},{"text":" ","type":"text"},{"text":"and if that fails, fall back to trying ANSI code-pages, including the system-specific “active” code-page.","type":"text"},{"text":" ","type":"text"},{"text":"The platform’s ","type":"text"},{"code":"MultiByteToWideChar","type":"codeVoice"},{"text":" function is able to map these encodings to Unicode.","type":"text"}],"type":"paragraph"}]}]},{"code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should convert to UTF-16 and use the '-W' family of platform functions.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","let openFn: (UnsafePointer<CChar>, Int32, mode_t) -> Int32 = Darwin.open","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the binary file path.","let binaryPath = try WebURL.binaryFilePath(from: url, nullTerminated: true)","","\/\/ Handle signed CChar by rebinding.","binaryPath.withUnsafeBufferPointer {","  $0.withMemoryRebound(to: CChar.self) { cString in","    \/\/ Use the C string to interact with the OS.","    let descriptor = openFn(cString.baseAddress!, O_WRONLY | O_CREAT, S_IRUSR | S_IWUSR | S_IROTH)","    \/\/ ... write to file","    close(descriptor)","  }","}"],"syntax":"swift","type":"codeListing"},{"style":"tip","content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"To work with binary file paths, we recommend developers use a dedicated file path type,","type":"text"},{"text":" ","type":"text"},{"text":"such as swift-system’s ","type":"text"},{"code":"FilePath","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"FilePath(url: WebURL)","type":"codeVoice"},{"text":" initializer from ","type":"text"},{"code":"WebURLSystemExtras","type":"codeVoice"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"the best way to construct a file path from a URL. It automatically handles platform-specific details","type":"text"},{"text":" ","type":"text"},{"text":"such as transcoding on Windows.","type":"text"}],"type":"paragraph"},{"code":["import WebURL","import System","import WebURLSystemExtras","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the file path.","let path = try FilePath(url: url)","","\/\/ Open the file and write some data.","let descriptor = try FileDescriptor.open(path, .readWrite, options: .create, permissions: [.ownerReadWrite, .otherRead])","try descriptor.writeAll(\"hello, world!\".utf8)","try descriptor.close()"],"type":"codeListing","syntax":"swift"}],"type":"aside","name":"Tip"},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","isActive":true}],"type":"paragraph"}],"type":"aside","name":"Throws"}],"kind":"content"}],"kind":"symbol","abstract":[{"text":"Reconstructs a binary file path from a URL.","type":"text"}],"seeAlsoSections":[{"title":"Converting To and From Binary File Paths","generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","interfaceLanguage":"swift"},"references":{"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"FilePathFormat","kind":"identifier"}],"abstract":[{"text":"A description of a file path’s structure.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilePathFormat","kind":"identifier"}],"url":"\/documentation\/weburl\/filepathformat","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","title":"FilePathFormat"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"type":"topic","role":"symbol","title":"fromBinaryFilePath(_:format:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","abstract":[{"text":"Creates a URL representation of a binary file path.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"}],"url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebURL"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","type":"topic","url":"\/documentation\/weburl\/weburl","abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}],"title":"WebURL","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WebURL"}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"role":"symbol","type":"topic","title":"native","kind":"symbol","abstract":[{"text":"The native path style used by the compile target.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"native","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"url":"\/documentation\/weburl\/filepathformat\/native"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFromURLError":{"navigatorTitle":[{"text":"FilePathFromURLError","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FilePathFromURLError","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The reason why a file path could not be created from a URL."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","title":"FilePathFromURLError","url":"\/documentation\/weburl\/filepathfromurlerror","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"type":"topic","abstract":[{"text":"Reconstructs a binary file path from a URL.","type":"text"}],"role":"symbol","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","kind":"symbol","title":"binaryFilePath(from:format:nullTerminated:)"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","type":"topic","url":"\/documentation\/weburl","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","kind":"symbol"}}}