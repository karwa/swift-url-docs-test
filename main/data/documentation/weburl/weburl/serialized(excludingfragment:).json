{"sections":[],"abstract":[{"text":"Returns the string representation of this URL.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"serialized(excludingFragment:)","extendedModule":"WebURL","roleHeading":"Instance Method","externalID":"s:6WebURLAAV10serialized17excludingFragmentSSSb_tF","modules":[{"name":"WebURL"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":"(","kind":"text"},{"text":"excludingFragment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"symbolKind":"method","role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":"(","kind":"text"},{"text":"excludingFragment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = false) -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"excludingFragment","content":[{"type":"paragraph","inlineContent":[{"text":"Whether the fragment should be omitted from the result. The default is ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"The serialization of a URL is defined by the URL Standard. This is the same serialization as is used","type":"text"},{"text":" ","type":"text"},{"text":"when initializing a String from a ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":" value, printing a ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":", or encoding a ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let url: WebURL = ...","url.serialized()","String(url)      \/\/ Same as above.","print(url)       \/\/ Same as print(url.serialized())"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Idempotence","type":"heading","text":"Idempotence"},{"inlineContent":[{"text":"The URL Standard ensures that the combination of parser, serializer, and API, guarantee idempotence.","type":"text"},{"text":" ","type":"text"},{"text":"This means that any ","type":"text"},{"type":"codeVoice","code":"WebURL"},{"text":" value may be converted to a string (for example, in a log file or JSON)","type":"text"},{"text":" ","type":"text"},{"text":"and re-parsed, and the result is guaranteed to be identical to the original ","type":"text"},{"type":"codeVoice","code":"WebURL"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["func takesURLAsString(_ urlString: String) {","  \/\/ ✅ If `urlString` is a serialized WebURL, this is guaranteed","  \/\/    to reconstruct the value exactly.","  let reparsed = WebURL(urlString)","  assert(reparsed.serialized() == urlString)","}"],"syntax":"swift","type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"In Swift terms, this means that WebURL is "},{"type":"codeVoice","code":"LosslessStringConvertible"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","style":"tip","name":"Tip"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"This may seem like an obvious feature, but not all URL libraries offer it."},{"text":" ","type":"text"},{"text":"Some libraries require special ","type":"text"},{"code":"normalize()","type":"codeVoice"},{"text":" functions, or that you enable a ‘relaxed’ parsing mode,","type":"text"},{"text":" ","type":"text"},{"text":"and some URL types have additional state which isn’t part of the serialization at all!","type":"text"}]}],"type":"aside","style":"note","name":"Note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/serialized(excludingfragment:)"]}],"references":{"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","type":"topic","url":"\/documentation\/weburl","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(_:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","abstract":[{"type":"text","text":"Parses a URL string."}],"kind":"symbol","url":"\/documentation\/weburl\/weburl\/init(_:)","role":"symbol","type":"topic","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/serialized(excludingFragment:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","abstract":[{"text":"Returns the string representation of this URL.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","title":"serialized(excludingFragment:)","url":"\/documentation\/weburl\/weburl\/serialized(excludingfragment:)","role":"symbol","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebURL"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","type":"topic","url":"\/documentation\/weburl\/weburl","abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}],"title":"WebURL","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WebURL"}]}}}