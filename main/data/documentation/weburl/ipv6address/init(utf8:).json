{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"utf8","content":[{"inlineContent":[{"text":"The string to parse, as a collection of UTF-8 code-units.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This initializer constructs an IPv6 address from raw UTF-8 bytes rather than requiring","type":"text"},{"text":" ","type":"text"},{"text":"they be stored as a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":". It uses precisely the same parsing algorithm as ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)","type":"reference","isActive":true},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following example demonstrates loading a file as a Foundation ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" object, and parsing each line","type":"text"},{"text":" ","type":"text"},{"text":"as an IPv6 address string directly from the binary text. Doing this saves allocating a String","type":"text"},{"text":" ","type":"text"},{"text":"and UTF-8 validation. Since all valid address strings are ASCII, validating UTF-8 is redundant.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let address = IPv6Address(utf8: lineBytes)","  ...","}"]},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"This is not the same as constructing an "},{"type":"codeVoice","code":"IPv6Address"},{"type":"text","text":" from its raw bytes."},{"type":"text","text":" "},{"type":"text","text":"The bytes provided to this function must contain a formatted address string."}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"role":"symbol","extendedModule":"WebURL","symbolKind":"init","modules":[{"name":"WebURL"}],"externalID":"s:6WebURL11IPv6AddressV4utf8ACSgx_tcSlRzs5UInt8V7ElementRtzlufc","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(utf8:)"},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/serialized","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(octets:)"],"title":"Related Documentation"},{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)"],"generated":true,"title":"Parsing an Address from a String"}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(utf8:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/weburl\/ipv6address\/init(utf8:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Parses an IPv6 address string from a collection of UTF-8 code-units.","type":"text"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(octets:)":{"url":"\/documentation\/weburl\/ipv6address\/init(octets:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"octets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL11IPv6AddressV","text":"IPv6Address"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL11IPv6AddressV6Octetsa","text":"Octets"},{"kind":"text","text":")"}],"title":"init(octets:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(octets:)","abstract":[{"type":"text","text":"Creates an address from its raw octets."}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(utf8:)":{"abstract":[{"type":"text","text":"Parses an IPv6 address string from a collection of UTF-8 code-units."}],"url":"\/documentation\/weburl\/ipv6address\/init(utf8:)","type":"topic","kind":"symbol","title":"init(utf8:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(utf8:)"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/serialized":{"abstract":[{"type":"text","text":"The canonical textual representation of this address."}],"url":"\/documentation\/weburl\/ipv6address\/serialized","type":"topic","kind":"symbol","title":"serialized","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/serialized"},"https://tools.ietf.org/html/rfc2460":{"titleInlineContent":[{"text":"Internet Protocol, version 6","type":"text"}],"url":"https:\/\/tools.ietf.org\/html\/rfc2460","type":"link","title":"Internet Protocol, version 6","identifier":"https:\/\/tools.ietf.org\/html\/rfc2460"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","type":"topic","url":"\/documentation\/weburl","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(_:)":{"role":"symbol","title":"init(_:)","type":"topic","kind":"symbol","url":"\/documentation\/weburl\/ipv6address\/init(_:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)","abstract":[{"text":"Parses an IPv6 address string.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address":{"title":"IPv6Address","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IPv6Address"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A 128-bit numerical identifier assigned to a device on an ","type":"text"},{"type":"reference","identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","isActive":true},{"text":" network.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"IPv6Address"}],"url":"\/documentation\/weburl\/ipv6address","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address"}}}