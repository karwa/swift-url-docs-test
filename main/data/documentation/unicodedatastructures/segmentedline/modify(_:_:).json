{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/modify(_:_:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","title":"modify(_:_:)","modules":[{"name":"UnicodeDataStructures"}],"externalID":"s:21UnicodeDataStructures13SegmentedLineV6modifyyySnyxG_yq_zXEtF","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","extendedModule":"UnicodeDataStructures"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"boundsToModify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"parameters":[{"name":"boundsToModify","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The locations whose values should be modified."},{"type":"text","text":" "},{"type":"text","text":"Must be within this space’s "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds"},{"type":"text","text":"."}]}]},{"name":"body","content":[{"inlineContent":[{"text":"A closure which modifies values associated with the given locations.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Any segments which intersect the region will be split, preserving the values of locations"},{"type":"text","text":" "},{"type":"text","text":"outside the region. Locations inside the region will be visited by the given closure, which may"},{"type":"text","text":" "},{"type":"text","text":"assign a new value derived from the existing value."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let string = \"Bob is feeling great\"","","\/\/ Create a SegmentedLine for the collection's contents.","\/\/ Start by setting a font attribute over the entire string.","","var tags = SegmentedLine(","  bounds: string.startIndex..<string.endIndex,","  value: [Font.custom(\"Comic Sans\")] as [Any]",")","","\/\/ Set each word to a different color.","\/\/ Use 'modify' to append the attribute, but only for the region","\/\/ we're modifying.","","for word: Substring in string.split(separator: \" \") {","  tags.modify(word.startIndex..<word.endIndex) { attributes in","    attributes.append(Color.random())","  }","}","","\/\/ Check the result.","\/\/ - ✅ Every segment still contains the font attribute.","\/\/ - ✅ Each word also contains its individual color attribute.","","for (range, attributes) in tags.segments {","  print(#\"\"\\#(string[range])\"\"#, \"-\", attributes)","}","","\/\/ \"Bob\"     [Font.custom(\"Comic Sans\"), Color.orange]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"is\"      [Font.custom(\"Comic Sans\"), Color.green]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"feeling\" [Font.custom(\"Comic Sans\"), Color.pink]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"great\"   [Font.custom(\"Comic Sans\"), Color.yellow]"]},{"inlineContent":[{"code":"boundsToModify","type":"codeVoice"},{"text":" must be entirely within the ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","type":"reference","isActive":true},{"text":" of this space.","type":"text"},{"text":" ","type":"text"},{"text":"Modifying an empty range will not modify any segments, and may not invoke the closure at all.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"Modifies the values assigned to the given region.","type":"text"}],"variants":[{"paths":["\/documentation\/unicodedatastructures\/segmentedline\/modify(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/bounds":{"role":"symbol","url":"\/documentation\/unicodedatastructures\/segmentedline\/bounds","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","title":"bounds","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bounds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"The bounds of this space.","type":"text"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","role":"collection","title":"UnicodeDataStructures","abstract":[],"url":"\/documentation\/unicodedatastructures","type":"topic"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"navigatorTitle":[{"kind":"identifier","text":"SegmentedLine"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SegmentedLine"}],"role":"symbol","title":"SegmentedLine","abstract":[{"type":"text","text":"A "},{"code":"SegmentedLine","type":"codeVoice"},{"type":"text","text":" is a one-dimensional space, where every location is assigned a value."}],"url":"\/documentation\/unicodedatastructures\/segmentedline","type":"topic"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/modify(_:_:)":{"role":"symbol","url":"\/documentation\/unicodedatastructures\/segmentedline\/modify(_:_:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/modify(_:_:)","title":"modify(_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Modifies the values assigned to the given region.","type":"text"}]}}}