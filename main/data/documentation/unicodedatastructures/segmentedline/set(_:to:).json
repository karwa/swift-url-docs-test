{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"boundsToReplace"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The locations which should be assigned the new value.","type":"text"},{"text":" ","type":"text"},{"text":"Must be entirely within this space’s ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"boundsToReplace"},{"content":[{"inlineContent":[{"text":"The value to assign.","type":"text"}],"type":"paragraph"}],"name":"newValue"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Any segments which intersect the region will be split, preserving the values of locations","type":"text"},{"text":" ","type":"text"},{"text":"outside the region. Locations inside the region will be covered by a single segment,","type":"text"},{"text":" ","type":"text"},{"text":"containing the given value.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["var line = SegmentedLine<Int, String?>(bounds: 0..<100, value: nil)","","\/\/ After setting values <5 to \"small\" and values >10 to \"large\",","\/\/ the gap is left with its previous value, \"medium\".","","line.set(0..<20,  to: \"medium\")","line.set(0..<5,   to: \"small\")","line.set(10..<60, to: \"large\")","print(line)","\/\/ | [0..<5]: \"small\" | [5..<10]: \"medium\" | [10..<60]: \"large\" | [60..<100]: nil |","","\/\/ After setting, there will be a single span covering the given region.","","line.set(5..<100, to: \"not small\")","print(line)","\/\/ | [0..<5]: \"small\" | [5..<100]: \"not small\" |"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"boundsToReplace"},{"type":"text","text":" must be entirely within the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","isActive":true},{"type":"text","text":" of this space."},{"type":"text","text":" "},{"type":"text","text":"Assigning a value to an empty range will not modify any segments."}]},{"type":"paragraph","inlineContent":[{"text":"Every location within the bounds of this space is assigned a value.","type":"text"},{"text":" ","type":"text"},{"text":"Every ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" begins with at least one segment, assigning a value to its entire bounds","type":"text"},{"text":" ","type":"text"},{"text":"(in the above example, the value’s type is an ","type":"text"},{"code":"Optional","type":"codeVoice"},{"text":" and the initial value is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":").","type":"text"}]}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Assigns a single value to all locations in the given region.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/set(_:to:)"},"metadata":{"symbolKind":"method","title":"set(_:to:)","modules":[{"name":"UnicodeDataStructures"}],"role":"symbol","externalID":"s:21UnicodeDataStructures13SegmentedLineV3set_2toySnyxG_q_tF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"extendedModule":"UnicodeDataStructures","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/unicodedatastructures\/segmentedline\/set(_:to:)"]}],"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"navigatorTitle":[{"kind":"identifier","text":"SegmentedLine"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SegmentedLine"}],"role":"symbol","title":"SegmentedLine","abstract":[{"type":"text","text":"A "},{"code":"SegmentedLine","type":"codeVoice"},{"type":"text","text":" is a one-dimensional space, where every location is assigned a value."}],"url":"\/documentation\/unicodedatastructures\/segmentedline","type":"topic"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","role":"collection","title":"UnicodeDataStructures","abstract":[],"url":"\/documentation\/unicodedatastructures","type":"topic"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/bounds":{"role":"symbol","url":"\/documentation\/unicodedatastructures\/segmentedline\/bounds","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","title":"bounds","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bounds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"The bounds of this space.","type":"text"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/set(_:to:)":{"role":"symbol","url":"\/documentation\/unicodedatastructures\/segmentedline\/set(_:to:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/set(_:to:)","title":"set(_:to:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Assigns a single value to all locations in the given region.","type":"text"}]}}}